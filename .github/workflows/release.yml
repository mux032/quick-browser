name: Release APK

permissions:
  contents: write

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21.0.7'
        distribution: 'oracle'
        architecture: 'x64'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Sign APK (if keystore available)
      if: env.KEYSTORE_FILE != ''
      run: |
        echo ${{ secrets.KEYSTORE_FILE }} | base64 -d > keystore.jks
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=$(pwd)/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Rename APK with tag
      run: |
        cp app/build/outputs/apk/release/app-release.apk quick-browser-${{ github.ref_name }}.apk

    - name: Archive source code (zip)
      run: |
        git archive --format=zip --output=quick-browser-source-${{ github.ref_name }}.zip HEAD

    - name: Archive source code (tar.gz)
      run: |
        git archive --format=tar --output=quick-browser-source-${{ github.ref_name }}.tar HEAD
        gzip -f quick-browser-source-${{ github.ref_name }}.tar

    - name: Create GitHub Release and Upload Assets
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name }}
        name: Quick Browser ${{ github.ref_name }}
        generate_release_notes: true
        files: |
          quick-browser-${{ github.ref_name }}.apk
          quick-browser-source-${{ github.ref_name }}.zip
          quick-browser-source-${{ github.ref_name }}.tar.gz
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}