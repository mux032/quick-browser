name: Release APK

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        
    - name: Cache Gradle packages
      uses: actions/cache@v4
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
          
    - name: Make gradlew executable
      run: chmod +x ./gradlew
      
    - name: Run tests
      run: ./gradlew test
      
    - name: Build Release APK
      run: ./gradlew assembleRelease
      
    - name: Sign APK (if keystore available)
      if: env.KEYSTORE_FILE != ''
      run: |
        echo ${{ secrets.KEYSTORE_FILE }} | base64 -d > keystore.jks
        ./gradlew assembleRelease \
          -Pandroid.injected.signing.store.file=$(pwd)/keystore.jks \
          -Pandroid.injected.signing.store.password=${{ secrets.KEYSTORE_PASSWORD }} \
          -Pandroid.injected.signing.key.alias=${{ secrets.KEY_ALIAS }} \
          -Pandroid.injected.signing.key.password=${{ secrets.KEY_PASSWORD }}
      env:
        KEYSTORE_FILE: ${{ secrets.KEYSTORE_FILE }}
        
    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
      
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Quick Browser ${{ steps.get_version.outputs.VERSION }}
        body: |
          ## Changes in this Release
          - Built from commit ${{ github.sha }}
          - Release APK available for download
          
          ## Installation
          1. Download the APK file
          2. Enable "Install from unknown sources" in your Android settings
          3. Install the APK
          
          ## Requirements
          - Android 8.0 (API level 26) or higher
        draft: false
        prerelease: false
        
    - name: Upload Release APK
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: app/build/outputs/apk/release/app-release.apk
        asset_name: Quick-Browser-${{ steps.get_version.outputs.VERSION }}.apk
        asset_content_type: application/vnd.android.package-archive